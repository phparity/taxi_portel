# Generated by Django 4.2 on 2023-05-01 09:50

import ckeditor.fields
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import fontawesome_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AddOn",
            fields=[
                ("addon_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "addon_type",
                    models.CharField(
                        choices=[
                            ("transfer", "Transfer"),
                            ("airport_vip", "Airport VIP Service"),
                            ("tour", "Tour"),
                            ("access_disabled", "Access for Disabled"),
                        ],
                        max_length=20,
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("quantity", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Affiliate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("affiliate_code", models.CharField(max_length=10, unique=True)),
                (
                    "commission_rate",
                    models.DecimalField(decimal_places=2, default=0.1, max_digits=5),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Airlines",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("IATA_CODE", models.CharField(max_length=10)),
                ("NAME", models.CharField(max_length=50)),
                ("ICAO_CODE", models.CharField(max_length=10)),
                ("LOGO", models.ImageField(upload_to="images/air_logo")),
                (
                    "WEBSITE",
                    models.CharField(
                        choices=[
                            ("www.gocaribetour.com", "www.gocaribetour.com"),
                            (
                                "www.dominicanairportshuttle.com",
                                "www.dominicanairportshuttle.com",
                            ),
                            (
                                "www.transferspuntacana.com",
                                "www.transferspuntacana.com",
                            ),
                            (
                                "www.dominicanlimousine.com",
                                "www.dominicanlimousine.com",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Airports",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "WEBSITE",
                    models.CharField(
                        choices=[
                            ("www.gocaribetour.com", "www.gocaribetour.com"),
                            (
                                "www.dominicanairportshuttle.com",
                                "www.dominicanairportshuttle.com",
                            ),
                            (
                                "www.transferspuntacana.com",
                                "www.transferspuntacana.com",
                            ),
                            (
                                "www.dominicanlimousine.com",
                                "www.dominicanlimousine.com",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                ("AIRPORT_NAME", models.CharField(max_length=100)),
                ("AIRPORT_SHORT_CODE", models.CharField(max_length=10)),
                ("Country", models.CharField(max_length=100)),
                (
                    "City",
                    models.CharField(
                        help_text="City where the airport is located", max_length=100
                    ),
                ),
                (
                    "Address",
                    models.TextField(
                        blank=True, help_text="Full address of the airport", null=True
                    ),
                ),
                (
                    "terminal",
                    models.CharField(
                        blank=True,
                        help_text="Terminal information",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "gates",
                    models.PositiveIntegerField(
                        help_text="Number of gates at the airport"
                    ),
                ),
                ("airline_list", models.ManyToManyField(to="app1.airlines")),
            ],
        ),
        migrations.CreateModel(
            name="Bankdetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bank_name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Countries",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sortname", models.CharField(max_length=20)),
                ("country_name", models.CharField(max_length=50)),
                ("phonecode", models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                ("Country_id", models.AutoField(primary_key=True, serialize=False)),
                ("Country_name", models.CharField(max_length=100)),
                ("Short_Name", models.CharField(max_length=100)),
                ("Currency_Code", models.CharField(max_length=100)),
                ("Currency_Sign", models.CharField(max_length=100)),
                ("Phon_Code", models.IntegerField()),
                ("Phone_Number_Length", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Code", models.CharField(max_length=100)),
                (
                    "Type",
                    models.CharField(
                        choices=[
                            ("Discount By Percentage", "Discount By Percentage"),
                            ("Discount By Amount", "Discount By Amount"),
                        ],
                        max_length=100,
                    ),
                ),
                ("Percentage", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "Quantity",
                    models.CharField(
                        choices=[("Unlimited", "Unlimited"), ("Limited", "Limited")],
                        max_length=100,
                    ),
                ),
                ("Limit", models.PositiveIntegerField(blank=True, null=True)),
                ("Start_Date", models.DateField()),
                ("End_Date", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="CustomerManagement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ACCOUNT_STATUS_CHOICES",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("unactive", "Unactive"),
                            ("suspended", "Suspended"),
                        ],
                        default="unactive",
                        max_length=100,
                    ),
                ),
                ("First_Name", models.CharField(max_length=50)),
                ("Last_Name", models.CharField(max_length=50)),
                (
                    "Email",
                    models.EmailField(
                        max_length=254,
                        validators=[
                            django.core.validators.EmailValidator(
                                message="Please enter a valid email address."
                            )
                        ],
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("confirm_password", models.CharField(max_length=128)),
                ("National_Unique_ID_Number", models.CharField(max_length=50)),
                (
                    "Country_Code",
                    models.CharField(
                        help_text='Code like US = +1, IN = +91Visit <a href="https://countrycode.org/">Find Your Code</a> for more information.',
                        max_length=10,
                    ),
                ),
                (
                    "Mobile_Number",
                    models.IntegerField(help_text="Enter mobile Number "),
                ),
                (
                    "Gender",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")], max_length=10
                    ),
                ),
                ("Age", models.IntegerField()),
                ("Address_One", models.CharField(max_length=300)),
                ("Address_Two", models.CharField(max_length=300)),
                ("Nearest_Famous_Place", models.CharField(max_length=200)),
                ("Country", models.CharField(max_length=20)),
                ("State", models.CharField(max_length=20)),
                ("City", models.CharField(max_length=20)),
                ("referral_code", models.CharField(blank=True, max_length=100)),
                (
                    "upload_id",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/AA_customer_ids/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DestinationPlaces",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "WEBSITE",
                    models.CharField(
                        choices=[
                            ("www.gocaribetour.com", "www.gocaribetour.com"),
                            (
                                "www.dominicanairportshuttle.com",
                                "www.dominicanairportshuttle.com",
                            ),
                            (
                                "www.transferspuntacana.com",
                                "www.transferspuntacana.com",
                            ),
                            (
                                "www.dominicanlimousine.com",
                                "www.dominicanlimousine.com",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                ("Meta_Title", models.CharField(max_length=150)),
                ("Meta_Keyword", models.CharField(max_length=150)),
                ("Meta_Description", models.CharField(max_length=300)),
                ("Country_Name", models.CharField(max_length=100)),
                ("Destination_Place_Title", models.CharField(max_length=100)),
                ("Image", models.ImageField(upload_to="images/destination_place")),
                ("Description", models.CharField(max_length=1500)),
            ],
        ),
        migrations.CreateModel(
            name="DriverManagement",
            fields=[
                ("driver_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "WEBSITE",
                    models.CharField(
                        choices=[
                            ("www.gocaribetour.com", "www.gocaribetour.com"),
                            (
                                "www.dominicanairportshuttle.com",
                                "www.dominicanairportshuttle.com",
                            ),
                            (
                                "www.transferspuntacana.com",
                                "www.transferspuntacana.com",
                            ),
                            (
                                "www.dominicanlimousine.com",
                                "www.dominicanlimousine.com",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                ("First_Name", models.CharField(max_length=50)),
                ("Last_Name", models.CharField(max_length=50)),
                (
                    "Country_Code",
                    models.CharField(
                        help_text='Code like US = +1, IN = +91Visit <a href="https://countrycode.org/">Find Your Code</a> for more information.',
                        max_length=10,
                    ),
                ),
                ("Mobile_Number", models.IntegerField()),
                (
                    "Email_Address",
                    models.EmailField(
                        max_length=254,
                        validators=[
                            django.core.validators.EmailValidator(
                                message="Please enter a valid email address."
                            )
                        ],
                    ),
                ),
                ("National_Unique_ID_Number", models.CharField(max_length=50)),
                ("Driving_License_Number", models.CharField(max_length=50)),
                (
                    "Expiry_of_Driving_Licencse",
                    models.DateField(help_text="YYYY:MM:DD"),
                ),
                ("Address", models.CharField(max_length=300)),
                ("Driver_Photo", models.ImageField(upload_to="images/Driver_details")),
                (
                    "Driving_Licence_Copy",
                    models.ImageField(upload_to="images/Driver_details"),
                ),
                ("operational_zone", models.CharField(max_length=100)),
                ("bank_account_holder_name", models.CharField(max_length=100)),
                ("account_number", models.IntegerField()),
                ("swift_bic", models.CharField(max_length=100)),
                (
                    "is_available",
                    models.CharField(
                        choices=[("True", "available"), ("False", "unavailable")],
                        default=True,
                        max_length=20,
                    ),
                ),
                (
                    "bank",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.bankdetail",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FastTrack_AddOns_Type",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name="FastTrack_Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Type",
                    models.CharField(
                        choices=[("ARRIVAL", "ARRIVAL"), ("DEPARTURE", "DEPARTURE")],
                        max_length=50,
                    ),
                ),
                ("Image", models.ImageField(upload_to="images/FastTrack_Service")),
                ("Title", models.CharField(max_length=100)),
                ("Per_Adults_Price", models.IntegerField()),
                ("Per_Child_Price", models.IntegerField()),
                ("Per_Infant_Price", models.IntegerField()),
                ("Per_Pets_Price", models.IntegerField()),
                ("Taxes_and_Fees", models.IntegerField()),
                (
                    "Airport",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app1.airports"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FastTrackBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("AIRPORT", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="FeatureChoices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feature_name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("location", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="MapZone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "Polygon",
                    django.contrib.gis.db.models.fields.PolygonField(
                        null=True, srid=4326
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pickup_Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Location", models.CharField(max_length=250)),
                ("Fees", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Staff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("staff_id_photo", models.ImageField(upload_to="images/staff_ids/")),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("biller", "Biller"),
                            ("dispatcher", "Dispatcher"),
                            ("admin", "Admin"),
                            ("superadmin", "Superadmin"),
                            ("supplier", "Supplier"),
                            ("driver", "Driver"),
                        ],
                        max_length=20,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("phone", models.IntegerField()),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=128)),
                ("referral_code", models.CharField(blank=True, max_length=100)),
                (
                    "account_status",
                    models.CharField(
                        choices=[("activate", "Activate"), ("suspended", "Suspended")],
                        default="suspended",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("active", "Active"),
                            ("bid", "Bid"),
                            ("assigned", "Assigned"),
                            ("unsigned", "Unsigned"),
                            ("client_non_show", "Client non-show"),
                            ("driver_non_show", "Driver non-show"),
                            ("on_location", "On location"),
                            ("customer_in_car", "Customer in the car"),
                            ("drugstore_stops", "Drugstore stops"),
                            ("medical_stops", "Medical stops"),
                            ("grocery_stops", "Grocery stops"),
                            ("meeted", "Meeted"),
                            ("greeted", "Greeted"),
                            ("picked_up", "Picked Up"),
                            ("assisted", "Assisted"),
                            ("completed", "Completed"),
                            ("canceled", "Canceled"),
                        ],
                        max_length=100,
                    ),
                ),
                ("color", models.CharField(max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name="SupplierManagement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "WEBSITE",
                    models.CharField(
                        choices=[
                            ("www.gocaribetour.com", "www.gocaribetour.com"),
                            (
                                "www.dominicanairportshuttle.com",
                                "www.dominicanairportshuttle.com",
                            ),
                            (
                                "www.transferspuntacana.com",
                                "www.transferspuntacana.com",
                            ),
                            (
                                "www.dominicanlimousine.com",
                                "www.dominicanlimousine.com",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                ("Company_Name", models.CharField(max_length=100)),
                ("Contact_Person_Name", models.CharField(max_length=100)),
                (
                    "Country_Code",
                    models.CharField(
                        help_text='Code like US = +1, IN = +91Visit <a href="https://countrycode.org/">Find Your Code</a> for more information.',
                        max_length=10,
                    ),
                ),
                ("Mobile_Number", models.IntegerField()),
                ("Supplier_ID", models.CharField(max_length=20)),
                ("general_manager_first_name", models.CharField(max_length=100)),
                ("general_manager_last_name", models.CharField(max_length=100)),
                ("reservation_manager_first_name", models.CharField(max_length=100)),
                ("reservation_manager_last_name", models.CharField(max_length=100)),
                ("booking_email", models.EmailField(max_length=254)),
                ("billing_email", models.EmailField(max_length=254)),
                ("billing_circle", models.CharField(max_length=100)),
                (
                    "Email",
                    models.EmailField(
                        max_length=254,
                        validators=[
                            django.core.validators.EmailValidator(
                                message="Please enter a valid email address."
                            )
                        ],
                    ),
                ),
                ("Address", models.CharField(max_length=300)),
                ("password", models.CharField(max_length=128)),
                ("confirm_password", models.CharField(max_length=128)),
                ("bank_account_holder_name", models.CharField(max_length=100)),
                ("account_number", models.IntegerField()),
                ("swift_bic", models.CharField(max_length=100)),
                (
                    "bank_Name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.bankdetail",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tour_Activities_types",
            fields=[
                (
                    "Tour_Activity_Title",
                    models.CharField(max_length=150, primary_key=True, serialize=False),
                ),
                (
                    "Tour_Activity_Icon",
                    fontawesome_5.fields.IconField(blank=True, max_length=60),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tour_Segment_types",
            fields=[
                (
                    "Tour_Segment_Title",
                    models.CharField(max_length=150, primary_key=True, serialize=False),
                ),
                (
                    "Tour_Segment_Icon",
                    fontawesome_5.fields.IconField(blank=True, max_length=60),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tour_Service_Types",
            fields=[
                (
                    "Tour_Service_Type_Title",
                    models.CharField(max_length=150, primary_key=True, serialize=False),
                ),
                (
                    "Tour_Service_Type_Icon",
                    fontawesome_5.fields.IconField(blank=True, max_length=60),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tour_Thematic_types",
            fields=[
                (
                    "Tour_Thematic_Title",
                    models.CharField(max_length=150, primary_key=True, serialize=False),
                ),
                (
                    "Tour_Thematic_Icon",
                    fontawesome_5.fields.IconField(blank=True, max_length=60),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tour_Types",
            fields=[
                (
                    "Tour_Type_Title",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                (
                    "WEBSITE",
                    models.CharField(
                        choices=[
                            ("www.gocaribetour.com", "www.gocaribetour.com"),
                            (
                                "www.dominicanairportshuttle.com",
                                "www.dominicanairportshuttle.com",
                            ),
                            (
                                "www.transferspuntacana.com",
                                "www.transferspuntacana.com",
                            ),
                            (
                                "www.dominicanlimousine.com",
                                "www.dominicanlimousine.com",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                ("Meta_Title", models.CharField(max_length=150)),
                ("Meta_Keyword", models.CharField(max_length=150)),
                ("Meta_Description", models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name="TourPackageN",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Tour_name",
                    models.CharField(help_text="Give Name of tour", max_length=50),
                ),
                (
                    "price_adult",
                    models.DecimalField(
                        decimal_places=2, help_text="Price for adults", max_digits=10
                    ),
                ),
                (
                    "price_children",
                    models.DecimalField(
                        decimal_places=2, help_text="Price for children", max_digits=10
                    ),
                ),
                (
                    "price_others",
                    models.DecimalField(
                        decimal_places=2, help_text="Price for others", max_digits=10
                    ),
                ),
                (
                    "infant_age",
                    models.PositiveIntegerField(help_text="Age limit for infants"),
                ),
                (
                    "total_passengers",
                    models.PositiveIntegerField(help_text="Total number of passengers"),
                ),
                (
                    "total_products",
                    models.PositiveIntegerField(help_text="Total number of products"),
                ),
                (
                    "select_date",
                    models.DateField(help_text="Selected date for the tour"),
                ),
                (
                    "select_shift",
                    models.CharField(
                        help_text="Selected shift for the tour", max_length=50
                    ),
                ),
                (
                    "transfer_tour_option_id",
                    models.PositiveIntegerField(help_text="Transfer tour option ID"),
                ),
                (
                    "tour_package_id",
                    models.PositiveIntegerField(
                        help_text="Tour package ID", unique=True
                    ),
                ),
                (
                    "pick_up_location",
                    models.CharField(help_text="Pick up location", max_length=200),
                ),
                (
                    "pickup_source_lat",
                    models.FloatField(
                        blank=True, help_text="Latitude of the pickup source"
                    ),
                ),
                (
                    "pickup_source_long",
                    models.FloatField(
                        blank=True, help_text="Longitude of the pickup source"
                    ),
                ),
                (
                    "total_original_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total original price",
                        max_digits=10,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Creation timestamp"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, help_text="Update timestamp"),
                ),
                ("description", models.TextField(help_text="Tour description")),
                (
                    "included",
                    models.TextField(help_text="What is included in the tour"),
                ),
                (
                    "not_included",
                    models.TextField(help_text="What is not included in the tour"),
                ),
                ("remark", models.TextField(help_text="Remarks")),
                (
                    "general_information",
                    models.TextField(help_text="General information"),
                ),
                ("duration", models.DurationField(help_text="Tour duration")),
                (
                    "buy_with_peace_of_mind",
                    models.TextField(help_text="Buy with peace of mind information"),
                ),
                (
                    "what_to_know_before_buying",
                    models.TextField(help_text="What to know before buying"),
                ),
                (
                    "date_change_policies",
                    models.TextField(help_text="Date change policies"),
                ),
                (
                    "cancellation_policy",
                    models.TextField(help_text="Cancellation policy"),
                ),
                (
                    "who_could_not_do_this_activity",
                    models.TextField(help_text="Who could not do this activity"),
                ),
                (
                    "before_attending",
                    models.TextField(help_text="Before attending information"),
                ),
                (
                    "hygiene_and_safety_measures",
                    models.TextField(help_text="Hygiene and safety measures"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TourTripBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("City_Name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Transfer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "FROM",
                    models.CharField(
                        help_text="Enter your Source point Here", max_length=100
                    ),
                ),
                (
                    "TO",
                    models.CharField(
                        help_text="Enter your Destination Point Here", max_length=100
                    ),
                ),
                ("Adults", models.IntegerField(default=0)),
                ("Children", models.IntegerField(default=0)),
                ("Infant", models.IntegerField(default=0)),
                (
                    "Tour_Type",
                    models.CharField(
                        choices=[("One Way", "One way"), ("Round Trip", "Round Trip")],
                        max_length=100,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Trip",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("canceled", "Canceled"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                (
                    "driver",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app1.drivermanagement",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle_AddOns_Types",
            fields=[
                (
                    "AddOns_type",
                    models.CharField(max_length=150, primary_key=True, serialize=False),
                ),
                (
                    "Features_Icon",
                    fontawesome_5.fields.IconField(blank=True, max_length=60),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle_Type",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Vehicle_Type", models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name="Vendors",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Meta_URL",
                    models.CharField(
                        choices=[
                            ("www.gocaribetour.com", "www.gocaribetour.com"),
                            (
                                "www.dominicanairportshuttle.com",
                                "www.dominicanairportshuttle.com",
                            ),
                            (
                                "www.transferspuntacana.com",
                                "www.transferspuntacana.com",
                            ),
                            (
                                "www.dominicanlimousine.com",
                                "www.dominicanlimousine.com",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "Email",
                    models.EmailField(
                        max_length=254,
                        validators=[
                            django.core.validators.EmailValidator(
                                message="Please enter a valid email address."
                            )
                        ],
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("confirm_password", models.CharField(max_length=128)),
                ("Company_Name", models.CharField(max_length=100)),
                ("Contact_Name", models.CharField(max_length=100)),
                ("Operation_Contact_Info", models.CharField(max_length=100)),
                ("Reservation_Contact_Info", models.CharField(max_length=100)),
                ("Billing_Contact_Info", models.CharField(max_length=100)),
                ("Logo", models.ImageField(upload_to="images/Vendors")),
                (
                    "Status",
                    models.CharField(
                        choices=[("Active", "Active"), ("Block", "Block")],
                        max_length=100,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VIPService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Zone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("City_name", models.CharField(max_length=100)),
                ("Zone_Name", models.CharField(max_length=100)),
                ("location", models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name="Vehicle_AddOns",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Name", models.CharField(max_length=100)),
                ("Description", models.CharField(max_length=300)),
                ("Image", models.ImageField(upload_to="images/Vehicle_AddOns")),
                ("Inbound_Price", models.IntegerField()),
                ("Outbound_Price", models.IntegerField()),
                (
                    "Type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.vehicle_addons_types",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "referral_bonus",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "affiliate",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app1.affiliate",
                    ),
                ),
                (
                    "referrer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="referrals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app1.role",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TripBidding",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bid_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("is_winner", models.BooleanField(default=False)),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.suppliermanagement",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app1.trip"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="trip",
            name="winning_bid",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="winning_trip",
                to="app1.tripbidding",
            ),
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[("DEPOSIT", "Deposit"), ("WITHDRAW", "Withdraw")],
                        max_length=10,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tour_packages",
            fields=[
                ("Tour_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "WEBSITE",
                    models.CharField(
                        choices=[
                            ("www.gocaribetour.com", "www.gocaribetour.com"),
                            (
                                "www.dominicanairportshuttle.com",
                                "www.dominicanairportshuttle.com",
                            ),
                            (
                                "www.transferspuntacana.com",
                                "www.transferspuntacana.com",
                            ),
                            (
                                "www.dominicanlimousine.com",
                                "www.dominicanlimousine.com",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                ("Meta_Title", models.CharField(max_length=150)),
                ("Meta_Keyword", models.CharField(max_length=150)),
                ("Meta_Description", models.CharField(max_length=300)),
                ("Package_Title", models.CharField(max_length=150)),
                ("City_Name", models.CharField(max_length=50)),
                (
                    "Total_Duration",
                    models.DurationField(help_text="add HH:MM:SS formet"),
                ),
                (
                    "Main_Image",
                    models.ImageField(
                        help_text="Image must 1366x406 Pixel",
                        upload_to="images/Tour_packages",
                    ),
                ),
                (
                    "Secondary_Image",
                    models.ImageField(
                        help_text="Image must 465x264 Pixel",
                        upload_to="images/Tour_packages",
                    ),
                ),
                (
                    "Third_Image",
                    models.ImageField(
                        help_text="Image must 235x143 Pixel",
                        upload_to="images/Tour_packages",
                    ),
                ),
                (
                    "Fourth_Image",
                    models.ImageField(
                        help_text="Image must 235x143 Pixel",
                        upload_to="images/Tour_packages",
                    ),
                ),
                ("Logo_Image", models.ImageField(upload_to="images/Tour_packages")),
                (
                    "Tour_Main_Features",
                    models.CharField(
                        help_text="In Sort for ex.(Flexible Reservation)",
                        max_length=300,
                    ),
                ),
                (
                    "Tour_Main_Features_Description",
                    models.CharField(
                        help_text="In Sort for ex.(What is a flexible reservation? If your plans change, you can cancel the activity.))",
                        max_length=300,
                    ),
                ),
                ("Pick_up_time", models.CharField(max_length=50)),
                ("Duration", models.CharField(max_length=50)),
                ("Departure_Day", models.CharField(max_length=50)),
                ("Type_of_guide", models.CharField(max_length=50)),
                ("Return_point", models.CharField(max_length=50)),
                ("Tour_Package_Description_One", ckeditor.fields.RichTextField()),
                ("Tour_Package_Description_Two", ckeditor.fields.RichTextField()),
                (
                    "Tour_Package_Additional_Information_One",
                    ckeditor.fields.RichTextField(),
                ),
                (
                    "Tour_Package_Additional_Information_Two",
                    ckeditor.fields.RichTextField(),
                ),
                ("What_Includes", ckeditor.fields.RichTextField()),
                ("What_Is_Not_Included", ckeditor.fields.RichTextField()),
                ("Hygiene_and_safety_measures", ckeditor.fields.RichTextField()),
                ("Remarks_And_General_information", ckeditor.fields.RichTextField()),
                (
                    "Tour_Activities",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.tour_activities_types",
                    ),
                ),
                (
                    "Tour_Service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.tour_service_types",
                    ),
                ),
                (
                    "Tour_Thematic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.tour_thematic_types",
                    ),
                ),
                (
                    "Tour_Type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.tour_types",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tour_Option",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Title", models.CharField(max_length=200)),
                ("Duration", models.DurationField()),
                ("monday", models.BooleanField(default=False)),
                ("tuesday", models.BooleanField(default=False)),
                ("wednesday", models.BooleanField(default=False)),
                ("thursday", models.BooleanField(default=False)),
                ("friday", models.BooleanField(default=False)),
                ("saturday", models.BooleanField(default=False)),
                ("sunday", models.BooleanField(default=False)),
                (
                    "Transfers",
                    models.CharField(
                        choices=[("Round_Trip", "Round_Trip"), ("One_Way", "One_Way")],
                        max_length=100,
                    ),
                ),
                ("Short_Description", models.CharField(max_length=500)),
                (
                    "Shift",
                    models.CharField(
                        choices=[
                            ("Morning", "Morning"),
                            ("Afternoon", "Afternoon"),
                            ("Evening", "Evening"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "Price_Per",
                    models.CharField(
                        choices=[
                            ("Per_Person", "Per_Person"),
                            ("Per_Product", "Per_Product"),
                        ],
                        max_length=50,
                    ),
                ),
                ("Per_Adults_Price", models.IntegerField(blank=True, null=True)),
                ("Per_Child_Price", models.IntegerField(blank=True, null=True)),
                ("Per_Infant_Price", models.IntegerField(blank=True, null=True)),
                (
                    "Total_Product",
                    models.IntegerField(blank=True, default=1, null=True),
                ),
                ("Product_Price", models.IntegerField(blank=True, null=True)),
                ("Taxes_And_Fees", models.IntegerField(help_text="(In %)")),
                (
                    "Tour_Package",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.tour_packages",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("State_Name", models.CharField(max_length=100)),
                (
                    "Country_Name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app1.country"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Service_Features",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Features_Icon",
                    fontawesome_5.fields.IconField(
                        blank=True, max_length=60, null=True
                    ),
                ),
                ("Features_Title", models.CharField(max_length=350)),
                (
                    "Service_Featuresids",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.fasttrack_service",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.PositiveIntegerField()),
                ("description", models.TextField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                ("review_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("transfer", "Transfer"),
                            ("vip_service", "VIP Service"),
                            ("tour", "Tour"),
                        ],
                        max_length=20,
                    ),
                ),
                ("service_id", models.IntegerField()),
                (
                    "rating",
                    models.PositiveIntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)]
                    ),
                ),
                ("comment", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Referral",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "referred",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="referred",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "referrer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="referrer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reward",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app1.reward"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Previous_Working_Company_Details",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Company_Name", models.CharField(default="None", max_length=50)),
                (
                    "Company_Contact",
                    models.IntegerField(default=0, help_text="without Country code"),
                ),
                (
                    "driver_comid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.drivermanagement",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Package_Featues_Include",
            fields=[
                (
                    "Tour_Features_Title",
                    models.CharField(max_length=150, primary_key=True, serialize=False),
                ),
                (
                    "Tour_Features_Icon",
                    fontawesome_5.fields.IconField(blank=True, max_length=60),
                ),
                (
                    "Tour_feaid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.tour_packages",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Fleet",
            fields=[
                ("vehicle_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "Meta_URL",
                    models.CharField(
                        choices=[
                            ("www.gocaribetour.com", "www.gocaribetour.com"),
                            (
                                "www.dominicanairportshuttle.com",
                                "www.dominicanairportshuttle.com",
                            ),
                            (
                                "www.transferspuntacana.com",
                                "www.transferspuntacana.com",
                            ),
                            (
                                "www.dominicanlimousine.com",
                                "www.dominicanlimousine.com",
                            ),
                        ],
                        max_length=100,
                    ),
                ),
                ("Meta_Keyword", models.CharField(max_length=200)),
                ("Meta_Description", models.CharField(max_length=350)),
                ("model_Name", models.CharField(max_length=80)),
                ("brand", models.CharField(max_length=100)),
                ("year", models.PositiveIntegerField()),
                ("plate", models.CharField(max_length=10)),
                ("Max_Passenger", models.IntegerField()),
                ("Max_Bag", models.IntegerField()),
                ("Max_Carry_Ons", models.IntegerField()),
                ("Vehicle_Price", models.IntegerField()),
                ("vehicle_record", models.TextField(null=True)),
                ("Vehicle_Image", models.ImageField(upload_to="images/Vehicle_image")),
                (
                    "Vehicle_Image2",
                    models.ImageField(blank=True, upload_to="images/Vehicle_image"),
                ),
                (
                    "Vehicle_Image3",
                    models.ImageField(blank=True, upload_to="images/Vehicle_image"),
                ),
                (
                    "Vehicle_Types",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.vehicle_type",
                    ),
                ),
                ("features", models.ManyToManyField(to="app1.featurechoices")),
            ],
        ),
        migrations.CreateModel(
            name="FastTrack_AddOns",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Title", models.CharField(max_length=100)),
                ("Image", models.ImageField(upload_to="images/FastTrack_AddOns")),
                ("Inbound_Price", models.IntegerField()),
                ("Outbound_Price", models.IntegerField()),
                ("Description", models.CharField(max_length=400)),
                (
                    "type",
                    models.ForeignKey(
                        limit_choices_to={"addon_type": "airport_vip"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.addon",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="drivermanagement",
            name="supplier",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app1.suppliermanagement",
            ),
        ),
        migrations.CreateModel(
            name="Dispatcher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("City_Name", models.CharField(max_length=100)),
                (
                    "Country_Name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app1.country"
                    ),
                ),
                (
                    "State_Name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app1.state"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app1.trip"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Activity_4",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Activity_Image",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/Tour_packages"
                    ),
                ),
                (
                    "Activity_Title",
                    models.CharField(
                        blank=True,
                        help_text="like : Best Price guarantee",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "Activity_Description",
                    models.CharField(blank=True, max_length=350, null=True),
                ),
                (
                    "Activity_4id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.tour_packages",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Activity_3",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Activity_Image",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/Tour_packages"
                    ),
                ),
                (
                    "Activity_Title",
                    models.CharField(
                        blank=True,
                        help_text="like : Safety Measure",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "Activity_Description",
                    models.CharField(blank=True, max_length=350, null=True),
                ),
                (
                    "Activity_3id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.tour_packages",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Activity_2",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Activity_Image",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/Tour_packages"
                    ),
                ),
                (
                    "Activity_Title",
                    models.CharField(
                        blank=True,
                        help_text="like : FREE Cancelation",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "Activity_Description",
                    models.CharField(blank=True, max_length=350, null=True),
                ),
                (
                    "Activity_2id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.tour_packages",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Activity_1",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Activity_Image",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/Tour_packages"
                    ),
                ),
                (
                    "Activity_Title",
                    models.CharField(
                        blank=True,
                        help_text="like : Modifiable date",
                        max_length=150,
                        null=True,
                    ),
                ),
                (
                    "Activity_Description",
                    models.CharField(blank=True, max_length=350, null=True),
                ),
                (
                    "Activity_1id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app1.tour_packages",
                    ),
                ),
            ],
        ),
    ]
